{"version":3,"sources":["modules/components/Header/header.tsx","modules/components/NewsResults/newsResults.tsx","modules/components/SearchForm/searchForm.tsx","modules/components/ResultCard/resultCard.tsx","modules/pages/Home/home.tsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appbar","padding","breakpoints","down","logoContainer","backgroundColor","logo","height","button","actionButton","marginLeft","marginRight","spacing","palette","primary","light","loginButton","Header","classes","AppBar","color","elevation","position","className","Toolbar","disableGutters","Button","disableRipple","alt","src","variant","disableElevation","root","minWidth","width","margin","overflow","borderRadius","title","pos","marginBottom","media","NewResults","text","weather","weatherIcon","Card","CardContent","Typography","component","CardMedia","image","conditions","iconUrl","summary","CardActions","href","link","style","textDecoration","size","uglyOrange","paper","display","flexDirection","justifyContent","submit","background","border","SearchForm","getNews","getIndustry","getCompany","getPersona","getWeather","setIsResultView","useForm","register","handleSubmit","errors","useState","onSubmit","data","a","interest","industry","locationB","company","persona","align","Grid","container","xs","item","TextField","name","fullWidth","id","label","placeholder","autoFocus","disabled","inputRef","required","type","ResultCard","topRow","Home","newsResults","setNewsResults","industryResults","setIndustryResults","companyResults","setCompanyResults","PersonaResults","setPersonaResults","weatherResults","setWeatherResults","isResultView","keyword","location","fetch","then","res","json","result","items","error","console","log","Container","maxWidth","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.88b72bff.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: any) => ({\n  appbar: {\n    padding: \"0 5em\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"0\",\n    },\n  },\n  logoContainer: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  logo: {\n    height: \"4em\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"3em\",\n    },\n  },\n  button: {\n    ...theme.actionButton,\n    marginLeft: \"auto\",\n    marginRight: theme.spacing(2),\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"0\",\n    },\n  },\n  loginButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n\n\n  return (\n    <AppBar\n      color=\"transparent\"\n      elevation={0}\n      position=\"static\"\n      className={classes.appbar}\n    >\n      <Toolbar disableGutters>\n        <Button disableRipple className={classes.logoContainer}>\n          <img\n            alt=\"salesfox logo\"\n            className={classes.logo}\n            src=\"https://assets.salesfox.ai/salesfox%20logo%20final.png\"\n          />\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n          className={classes.button}\n        >\n          Sign Up!\n        </Button>\n        <Button className={classes.loginButton}>Log In</Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 325,\n    width: \"100%\",\n    margin: 30,\n    height: 350,\n    overflow: \"auto\",\n    borderRadius: 25,\n  },\n  title: {\n    color: \"#3f51b5\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  media: {\n    height: 150,\n  },\n});\n\nexport default function NewResults({ title, text, weather, weatherIcon }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n          {title}\n        </Typography>\n        {weather[4] ? (\n          <CardMedia\n            className={classes.media}\n            image={weather[4].conditions[0].iconUrl}\n            title={weather[4].conditions[0].summary}\n          />\n        ) : (\n          <Typography className={classes.pos} color=\"textSecondary\">\n            No Data\n          </Typography>\n        )}\n        <Typography className={classes.pos} color=\"textSecondary\">\n          Top Results:\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {text[0] ? text[0].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={text[0] && text[0].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n        <br></br>\n        <Typography variant=\"body2\" component=\"p\">\n          {text[1] ? text[1].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={text[1] && text[1].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n        <br></br>\n        <Typography variant=\"body2\" component=\"p\">\n          {text[2] ? text[2].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={text[2] && text[2].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, {useState } from \"react\";\nimport {\n  Button,\n  TextField,\n  Grid,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from \"react-hook-form\";\n\nconst uglyOrange = '#e14536'\nconst creamSnow = '#FAF8F8'\nconst darkSlateGray = '#3f3d56'\n\nconst useStyles = makeStyles((theme: any) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: '90%',\n    justifyContent: 'space-around'\n  },\n  submit: {\n    background: uglyOrange,\n    border: `1px solid ${darkSlateGray}`,\n    color: creamSnow,\n    \"&:hover\": {\n      background: uglyOrange,\n      \"@media (hover: none)\": {\n        backgroundColor: uglyOrange,\n      },\n    },\n  },\n  title: {\n    color : uglyOrange,\n  }\n}));\n\nexport default function SearchForm({getNews, getIndustry, getCompany, getPersona, getWeather, setIsResultView}) {\n\n  // TODO: add validation and ensure secure login\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const onSubmit = async (data) => {\n    await getNews(data.interest || data.industry || \"news\", data.locationB || \"75024\");\n    await getIndustry(data.industry || \"sales\", data.locationB || \"75024\");\n    await getCompany(data.company || \"google\");\n    await getPersona(data.persona || \"microsoft\", data.locationB || \"75024\");\n    await getWeather(data.locationB || \"75024\");\n    setIsResultView(true);\n  }\n\n  return (\n    <>\n      <Typography variant=\"h1\" align=\"center\" className={classes.title}>\n        Salesfox Search\n      </Typography>\n      <Typography variant=\"h5\" align=\"center\" className={classes.title}>\n        Must Enter Market and Zip Code\n      </Typography>\n      <Grid\n        component=\"form\"\n        spacing={1}\n        container\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <Grid container xs={6}>\n          <div className={classes.paper}>\n            <Typography variant=\"subtitle1\">Account Based</Typography>\n            <Grid item xs={12}>\n              <TextField\n                name=\"name\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                placeholder=\"John doe\"\n                autoFocus\n                size=\"small\"\n                disabled\n                inputRef={register}\n              />\n              {/* {errors.firstName && (\n              <Typography color=\"error\" variant=\"body2\">\n                {errors.firstName.message}\n              </Typography>\n            )} */}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"title\"\n                label=\"Title\"\n                placeholder=\"CEO\"\n                name=\"title\"\n                size=\"small\"\n                disabled\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"url\"\n                label=\"Linkedln\"\n                placeholder=\"www.linkedin.com/in\"\n                name=\"url\"\n                size=\"small\"\n                disabled\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"company\"\n                label=\"Company\"\n                placeholder=\"Google\"\n                name=\"company\"\n                size=\"small\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"website\"\n                label=\"Website\"\n                placeholder=\"www.google.com\"\n                name=\"website\"\n                size=\"small\"\n                disabled\n                inputRef={register}\n              />\n            </Grid>\n          </div>\n        </Grid>\n        <Grid container xs={6}>\n          <div className={classes.paper}>\n            <Typography variant=\"subtitle1\">General</Typography>\n            <Grid item xs={12}>\n              <TextField\n                name=\"persona\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"persona\"\n                label=\"Persona\"\n                placeholder=\"Software Developer\"\n                autoFocus\n                size=\"small\"\n                inputRef={register}\n              />\n              {/* {errors.firstName && (\n              <Typography color=\"error\" variant=\"body2\">\n                {errors.firstName.message}\n              </Typography>\n            )} */}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"industry\"\n                label=\"Industry\"\n                placeholder=\"Computer Software\"\n                name=\"industry\"\n                size=\"small\"\n                inputRef={register}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"market\"\n                label=\"Market\"\n                placeholder=\"corporate gifting tool\"\n                name=\"market\"\n                size=\"small\"\n                inputRef={register({ required: true })}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"locationB\"\n                label=\"Zip Code\"\n                placeholder=\"75244\"\n                name=\"locationB\"\n                size=\"small\"\n                inputRef={register({ required: true })}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"interest\"\n                label=\"Interest\"\n                placeholder=\"Hockey\"\n                name=\"interest\"\n                size=\"small\"\n                inputRef={register}\n              />\n            </Grid>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disableElevation\n          >\n            Find Triggers\n          </Button>\n        </Grid>\n      </Grid>\n      </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 325,\n    width: \"100%\",\n    margin: 30,\n    height: 350,\n    overflow: \"auto\",\n    borderRadius: 25,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  title: {\n    color: \"#3f51b5\",\n  },\n});\n\nexport default function ResultCard({title, text}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n          {title}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          Top Results:\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {text[0] ? text[0].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={text[0] && text[0].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n        <br></br>\n        <Typography variant=\"body2\" component=\"p\">\n          {text[1] ? text[1].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={text[1] && text[1].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n        <br></br>\n        <Typography variant=\"body2\" component=\"p\">\n          {text[2] ? text[2].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={text[2] && text[2].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, {useState} from \"react\";\nimport { Grid, Container, Button } from \"@material-ui/core\";\n\nimport NewsResults from 'modules/components/NewsResults/newsResults'\nimport SearchForm from 'modules/components/SearchForm/searchForm'\nimport ResultCard from \"modules/components/ResultCard/resultCard\"\n// import {getNews} from 'modules/api/api'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst uglyOrange = \"#e14536\";\nconst creamSnow = \"#FAF8F8\";\nconst darkSlateGray = \"#3f3d56\";\n\nconst useStyles = makeStyles((theme: any) => ({\n  submit: {\n    background: uglyOrange,\n    border: `1px solid ${darkSlateGray}`,\n    color: creamSnow,\n    \"&:hover\": {\n      background: uglyOrange,\n      \"@media (hover: none)\": {\n        backgroundColor: uglyOrange,\n      },\n    },\n  },\n  topRow: {\n    display: 'flex',\n    justifyContent : 'space-between'\n  }\n}));\n\n\nexport default function Home() {\n  const classes = useStyles();\n  const [newsResults, setNewsResults] = useState([])\n  const [industryResults, setIndustryResults] = useState([])\n  const [companyResults, setCompanyResults] = useState([]);\n  const [PersonaResults, setPersonaResults] = useState([]);\n  const [weatherResults, setWeatherResults] = useState([]);\n  const [isResultView, setIsResultView] = useState(false)\n\n\n      async function getNews(keyword, location) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/news?q=${keyword}&zip_code=${location}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setNewsResults(result.items);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      async function getIndustry(keyword, location) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/industry?q=${keyword}&zip_code=${location}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setIndustryResults(result.items);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      async function getCompany(keyword) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/companies?name=${keyword}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setCompanyResults(result.items);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      async function getPersona(keyword, location) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/persona?q=${keyword}&zip_code=${location}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setPersonaResults(result.items);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      async function getWeather(location) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/weather?zip_code=${location}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setWeatherResults(result.weather);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      const getResults = async (keyword, location, name) => {\n         await getNews(keyword, location);\n         await getIndustry(keyword, location);\n         await getCompany(name);\n         await getPersona(keyword, location);\n         await getWeather(location);\n         setIsResultView(true);\n      }\n\n  return (\n    <Container maxWidth=\"lg\">\n      {isResultView ? (\n        <div>\n          <div className={classes.topRow}>\n            <Grid xs={3}>\n              <ResultCard title=\"Prospect Results\" text=\"COMING SOON\" />\n            </Grid>\n            <Grid xs={3}>\n                <ResultCard title=\"company Results\" text={companyResults} />\n            </Grid>\n            <Grid xs={3}>\n                <NewsResults\n                  title=\"Location Results\"\n                  text={newsResults}\n                  weather={weatherResults}\n                  weatherIcon={weatherResults}\n                />\n            </Grid>\n          </div>\n          <div className={classes.topRow}>\n            <Grid xs={3}>\n                <ResultCard title=\"Persona Results\" text={PersonaResults} />\n            </Grid>\n            <Grid xs={3}>\n              <ResultCard title=\"Interest Results\" text=\"COMING SOON\" />\n            </Grid>\n            <Grid xs={3}>\n                <ResultCard title=\"Market Results\" text={industryResults} />\n            </Grid>\n          </div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disableElevation\n            onClick={() => setIsResultView(false)}\n          >\n            Search Again\n          </Button>\n        </div>\n      ) : (\n        <>\n          <SearchForm\n            getNews={getNews}\n            getIndustry={getIndustry}\n            getCompany={getCompany}\n            getPersona={getPersona}\n            getWeather={getWeather}\n            setIsResultView={setIsResultView}\n          />\n          {/* <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disableElevation\n            onClick={() => getResults(\"technology\", \"75024\", \"google\")}\n          >\n            Find Triggers\n          </Button> */}\n        </>\n      )}\n    </Container>\n  );\n}\n","import './App.css';\nimport Header from 'modules/components/Header/header'\nimport Home from 'modules/pages/Home/home'\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header />\n    <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}