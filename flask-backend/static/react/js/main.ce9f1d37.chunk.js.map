{"version":3,"sources":["modules/components/Header/header.tsx","modules/components/NewsResults/newsResults.tsx","modules/components/SearchForm/searchForm.tsx","modules/components/ResultCard/resultCard.tsx","modules/pages/Home/home.tsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appbar","padding","breakpoints","down","logoContainer","backgroundColor","logo","height","button","actionButton","marginLeft","marginRight","spacing","palette","primary","light","loginButton","Header","classes","AppBar","color","elevation","position","className","Toolbar","disableGutters","Button","disableRipple","alt","src","variant","disableElevation","root","minWidth","width","margin","overflow","borderRadius","title","pos","marginBottom","media","NewResults","text","weather","weatherIcon","Card","CardContent","Typography","component","CardMedia","image","conditions","iconUrl","summary","CardActions","href","link","style","textDecoration","size","uglyOrange","paper","display","flexDirection","justifyContent","submit","background","border","SearchForm","getNews","getIndustry","getCompany","getPersona","getWeather","setIsResultView","useForm","register","handleSubmit","errors","useState","onSubmit","data","a","interest","industry","locationB","company","persona","align","Grid","container","xs","item","TextField","name","fullWidth","id","label","placeholder","autoFocus","disabled","inputRef","required","type","Link","ResultCard","textToUse","topRow","Home","newsResults","setNewsResults","industryResults","setIndustryResults","companyResults","setCompanyResults","PersonaResults","setPersonaResults","weatherResults","setWeatherResults","isResultView","keyword","location","fetch","then","res","json","result","items","error","console","log","Container","maxWidth","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.ce9f1d37.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  appbar: {\r\n    padding: \"0 5em\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"0\",\r\n    },\r\n  },\r\n  logoContainer: {\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  logo: {\r\n    height: \"4em\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: \"3em\",\r\n    },\r\n  },\r\n  button: {\r\n    ...theme.actionButton,\r\n    marginLeft: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"0\",\r\n    },\r\n  },\r\n  loginButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <AppBar\r\n      color=\"transparent\"\r\n      elevation={0}\r\n      position=\"static\"\r\n      className={classes.appbar}\r\n    >\r\n      <Toolbar disableGutters>\r\n        <Button disableRipple className={classes.logoContainer}>\r\n          <img\r\n            alt=\"salesfox logo\"\r\n            className={classes.logo}\r\n            src=\"https://assets.salesfox.ai/salesfox%20logo%20final.png\"\r\n          />\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className={classes.button}\r\n        >\r\n          Sign Up!\r\n        </Button>\r\n        <Button className={classes.loginButton}>Log In</Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 325,\r\n    width: \"100%\",\r\n    margin: 30,\r\n    height: 350,\r\n    overflow: \"auto\",\r\n    borderRadius: 25,\r\n  },\r\n  title: {\r\n    color: \"#3f51b5\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  media: {\r\n    height: 150,\r\n  },\r\n});\r\n\r\nexport default function NewResults({ title, text, weather, weatherIcon }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n        {weather[4] ? (\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={weather[4].conditions[0].iconUrl}\r\n            title={weather[4].conditions[0].summary}\r\n          />\r\n        ) : (\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            No Data\r\n          </Typography>\r\n        )}\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Top Results:\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {text[0] ? text[0].title : \"Unable to Retrieve Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a href={text[0] && text[0].link} style={{ textDecoration: \"none\" }}>\r\n            <Button size=\"small\">Learn More</Button>\r\n          </a>\r\n        </CardActions>\r\n        <br></br>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {text[1] ? text[1].title : \"Unable to Retrieve Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a href={text[1] && text[1].link} style={{ textDecoration: \"none\" }}>\r\n            <Button size=\"small\">Learn More</Button>\r\n          </a>\r\n        </CardActions>\r\n        <br></br>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {text[2] ? text[2].title : \"Unable to Retrieve Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a href={text[2] && text[2].link} style={{ textDecoration: \"none\" }}>\r\n            <Button size=\"small\">Learn More</Button>\r\n          </a>\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, {useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Typography,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst uglyOrange = '#e14536'\r\nconst creamSnow = '#FAF8F8'\r\nconst darkSlateGray = '#3f3d56'\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: '90%',\r\n    justifyContent: 'space-around'\r\n  },\r\n  submit: {\r\n    background: uglyOrange,\r\n    border: `1px solid ${darkSlateGray}`,\r\n    color: creamSnow,\r\n    \"&:hover\": {\r\n      background: uglyOrange,\r\n      \"@media (hover: none)\": {\r\n        backgroundColor: uglyOrange,\r\n      },\r\n    },\r\n  },\r\n  title: {\r\n    color : uglyOrange,\r\n  }\r\n}));\r\n\r\nexport default function SearchForm({getNews, getIndustry, getCompany, getPersona, getWeather, setIsResultView}) {\r\n\r\n  // TODO: add validation and ensure secure login\r\n  const classes = useStyles();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n  const onSubmit = async (data) => {\r\n    await getNews(data.interest || data.industry || \"news\", data.locationB || \"75024\");\r\n    await getIndustry(data.industry || \"Computer Software\", data.locationB || \"75024\");\r\n    await getCompany(data.company || \"Google\");\r\n    await getPersona(data.persona || \"Software Developer\", data.locationB || \"75024\");\r\n    await getWeather(data.locationB || \"75024\");\r\n    setIsResultView(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h1\" align=\"center\" className={classes.title}>\r\n        Salesfox Search\r\n      </Typography>\r\n      <Grid\r\n        component=\"form\"\r\n        spacing={1}\r\n        container\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <Grid container xs={6}>\r\n          <div className={classes.paper}>\r\n            <Typography variant=\"subtitle1\">Account Based</Typography>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                placeholder=\"John doe\"\r\n                autoFocus\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n              />\r\n              {/* {errors.firstName && (\r\n              <Typography color=\"error\" variant=\"body2\">\r\n                {errors.firstName.message}\r\n              </Typography>\r\n            )} */}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                placeholder=\"CEO\"\r\n                name=\"title\"\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"url\"\r\n                label=\"Linkedln\"\r\n                placeholder=\"www.linkedin.com/in\"\r\n                name=\"url\"\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"company\"\r\n                label=\"Company\"\r\n                placeholder=\"Google\"\r\n                name=\"company\"\r\n                size=\"small\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"website\"\r\n                label=\"Website\"\r\n                placeholder=\"www.google.com\"\r\n                name=\"website\"\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid container xs={6}>\r\n          <div className={classes.paper}>\r\n            <Typography variant=\"subtitle1\">General</Typography>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"persona\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"persona\"\r\n                label=\"Persona\"\r\n                placeholder=\"Software Developer\"\r\n                autoFocus\r\n                size=\"small\"\r\n                inputRef={register}\r\n              />\r\n              {/* {errors.firstName && (\r\n              <Typography color=\"error\" variant=\"body2\">\r\n                {errors.firstName.message}\r\n              </Typography>\r\n            )} */}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"industry\"\r\n                label=\"Industry\"\r\n                placeholder=\"Computer Software\"\r\n                name=\"industry\"\r\n                size=\"small\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"market\"\r\n                label=\"Market\"\r\n                placeholder=\"Corporate gifting tool\"\r\n                name=\"market\"\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"locationB\"\r\n                label=\"Zip Code*\"\r\n                placeholder=\"75244\"\r\n                name=\"locationB\"\r\n                size=\"small\"\r\n                inputRef={register({ required: true })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"interest\"\r\n                label=\"Interest\"\r\n                placeholder=\"Hockey\"\r\n                name=\"interest\"\r\n                size=\"small\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            fullWidth\r\n            disableElevation\r\n          >\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" align=\"center\" className={classes.title}>\r\n            <Link\r\n              color=\"inherit\"\r\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLSf-0rkzp6h2vFz0hTKMT9jVnWNjZmoBGpPSsq-uauxb8SJI8A/viewform\"\r\n            >\r\n            Click Here To Provide Feedback\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 325,\r\n    width: \"100%\",\r\n    margin: 30,\r\n    height: 350,\r\n    overflow: \"auto\",\r\n    borderRadius: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  title: {\r\n    color: \"#3f51b5\",\r\n  },\r\n});\r\n\r\nexport default function ResultCard({title, text}) {\r\n  const classes = useStyles();\r\n\r\n  const textToUse = text || {};\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Top Results:\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {textToUse[0] ? textToUse[0].title : \"Unable to Retrieve Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a href={textToUse[0] && textToUse[0].link} style={{ textDecoration: \"none\" }}>\r\n            <Button size=\"small\">Learn More</Button>\r\n          </a>\r\n        </CardActions>\r\n        <br></br>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {textToUse[1] ? textToUse[1].title : \"Unable to Retrieve Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a href={textToUse[1] && textToUse[1].link} style={{ textDecoration: \"none\" }}>\r\n            <Button size=\"small\">Learn More</Button>\r\n          </a>\r\n        </CardActions>\r\n        <br></br>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {textToUse[2] ? textToUse[2].title : \"Unable to Retrieve Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a href={textToUse[2] && textToUse[2].link} style={{ textDecoration: \"none\" }}>\r\n            <Button size=\"small\">Learn More</Button>\r\n          </a>\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport { Grid, Container, Button } from \"@material-ui/core\";\r\n\r\nimport NewsResults from 'modules/components/NewsResults/newsResults'\r\nimport SearchForm from 'modules/components/SearchForm/searchForm'\r\nimport ResultCard from \"modules/components/ResultCard/resultCard\"\r\n// import {getNews} from 'modules/api/api'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst uglyOrange = \"#e14536\";\r\nconst creamSnow = \"#FAF8F8\";\r\nconst darkSlateGray = \"#3f3d56\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  submit: {\r\n    background: uglyOrange,\r\n    border: `1px solid ${darkSlateGray}`,\r\n    color: creamSnow,\r\n    \"&:hover\": {\r\n      background: uglyOrange,\r\n      \"@media (hover: none)\": {\r\n        backgroundColor: uglyOrange,\r\n      },\r\n    },\r\n  },\r\n  topRow: {\r\n    display: 'flex',\r\n    justifyContent : 'space-between'\r\n  }\r\n}));\r\n\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const [newsResults, setNewsResults] = useState([])\r\n  const [industryResults, setIndustryResults] = useState([])\r\n  const [companyResults, setCompanyResults] = useState([]);\r\n  const [PersonaResults, setPersonaResults] = useState([]);\r\n  const [weatherResults, setWeatherResults] = useState([]);\r\n  const [isResultView, setIsResultView] = useState(false)\r\n\r\n\r\n      async function getNews(keyword, location) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/news?q=${keyword}&zip_code=${location}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setNewsResults(result.items);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      async function getIndustry(keyword, location) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/industry?q=${keyword}&zip_code=${location}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIndustryResults(result.items);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      async function getCompany(keyword) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/companies?name=${keyword}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setCompanyResults(result.items);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      async function getPersona(keyword, location) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/persona?q=${keyword}&zip_code=${location}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setPersonaResults(result.items);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      async function getWeather(location) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/weather?zip_code=${location}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setWeatherResults(result.weather);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      const getResults = async (keyword, location, name) => {\r\n         await getNews(keyword, location);\r\n         await getIndustry(keyword, location);\r\n         await getCompany(name);\r\n         await getPersona(keyword, location);\r\n         await getWeather(location);\r\n         setIsResultView(true);\r\n      }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {isResultView ? (\r\n        <div>\r\n          <div className={classes.topRow}>\r\n            <Grid xs={3}>\r\n              <ResultCard title=\"Prospect Results\" text=\"COMING SOON\" />\r\n            </Grid>\r\n            <Grid xs={3}>\r\n                <ResultCard title=\"Company Results\" text={companyResults} />\r\n            </Grid>\r\n            <Grid xs={3}>\r\n                <NewsResults\r\n                  title=\"Location Results\"\r\n                  text={newsResults}\r\n                  weather={weatherResults}\r\n                  weatherIcon={weatherResults}\r\n                />\r\n            </Grid>\r\n          </div>\r\n          <div className={classes.topRow}>\r\n            <Grid xs={3}>\r\n                <ResultCard title=\"Persona Results\" text={PersonaResults} />\r\n            </Grid>\r\n            <Grid xs={3}>\r\n              <ResultCard title=\"Interest Results\" text=\"COMING SOON\" />\r\n            </Grid>\r\n            <Grid xs={3}>\r\n                <ResultCard title=\"Market Results\" text={industryResults} />\r\n            </Grid>\r\n          </div>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disableElevation\r\n            onClick={() => setIsResultView(false)}\r\n          >\r\n            Search Again\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <SearchForm\r\n            getNews={getNews}\r\n            getIndustry={getIndustry}\r\n            getCompany={getCompany}\r\n            getPersona={getPersona}\r\n            getWeather={getWeather}\r\n            setIsResultView={setIsResultView}\r\n          />\r\n          {/* <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disableElevation\r\n            onClick={() => getResults(\"technology\", \"75024\", \"google\")}\r\n          >\r\n            Find Triggers\r\n          </Button> */}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import './App.css';\r\nimport Header from 'modules/components/Header/header'\r\nimport Home from 'modules/pages/Home/home'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Header />\r\n    <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}