{"version":3,"sources":["modules/components/Header/header.tsx","modules/pages/SearchForm/searchForm.tsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appbar","padding","breakpoints","down","logoContainer","backgroundColor","logo","height","button","actionButton","marginLeft","marginRight","spacing","palette","primary","light","loginButton","Header","classes","AppBar","color","elevation","position","className","Toolbar","disableGutters","Button","disableRipple","alt","src","variant","disableElevation","uglyOrange","paper","display","flexDirection","width","justifyContent","submit","background","border","title","SignUp","useState","Container","maxWidth","Grid","component","container","Typography","align","xs","item","TextField","name","fullWidth","id","label","placeholder","autoFocus","size","autoComplete","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.f37347bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  appbar: {\r\n    padding: \"0 5em\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"0\",\r\n    },\r\n  },\r\n  logoContainer: {\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  logo: {\r\n    height: \"4em\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: \"3em\",\r\n    },\r\n  },\r\n  button: {\r\n    ...theme.actionButton,\r\n    marginLeft: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"0\",\r\n    },\r\n  },\r\n  loginButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <AppBar\r\n      color=\"transparent\"\r\n      elevation={0}\r\n      position=\"static\"\r\n      className={classes.appbar}\r\n    >\r\n      <Toolbar disableGutters>\r\n        <Button\r\n          disableRipple\r\n          className={classes.logoContainer}\r\n        >\r\n          <img\r\n            alt=\"salesfox logo\"\r\n            className={classes.logo}\r\n            src={'modules/assets/salesfox-logo-final.png'}\r\n          />\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className={classes.button}\r\n        >\r\n          Sign Up!\r\n        </Button>\r\n        <Button\r\n          className={classes.loginButton}\r\n        >\r\n          Log In\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst uglyOrange = '#e14536'\r\nconst creamSnow = '#FAF8F8'\r\nconst darkSlateGray = '#3f3d56'\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: '90%',\r\n    justifyContent: 'space-between'\r\n  },\r\n  submit: {\r\n    background: uglyOrange,\r\n    border: `1px solid ${darkSlateGray}`,\r\n    color: creamSnow,\r\n    \"&:hover\": {\r\n      background: uglyOrange,\r\n      \"@media (hover: none)\": {\r\n        backgroundColor: uglyOrange,\r\n      },\r\n    },\r\n  },\r\n  title: {\r\n    color : uglyOrange,\r\n    marginLeft: 200\r\n  }\r\n}));\r\n\r\nexport default function SignUp() {\r\n\r\n  // TODO: add validation and ensure secure login\r\n  const classes = useStyles();\r\n  // const { register, handleSubmit, errors } = useForm();\r\n\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid component=\"form\" spacing={1} container>\r\n        <Typography variant=\"h1\" align='center' className={classes.title}>Salesfox Search</Typography>\r\n        <Grid container xs={6}>\r\n          <div className={classes.paper}>\r\n            <Typography variant=\"subtitle1\">Account Based</Typography>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                placeholder=\"John doe\"\r\n                autoFocus\r\n                size=\"small\"\r\n              />\r\n              {/* {errors.firstName && (\r\n              <Typography color=\"error\" variant=\"body2\">\r\n                {errors.firstName.message}\r\n              </Typography>\r\n            )} */}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                placeholder=\"CEO\"\r\n                name=\"title\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"url\"\r\n                label=\"Linkedln\"\r\n                placeholder=\"www.linkedin.com/in\"\r\n                name=\"url\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"company\"\r\n                label=\"Company\"\r\n                placeholder=\"Google\"\r\n                name=\"company\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"website\"\r\n                label=\"Website\"\r\n                placeholder=\"www.google.com\"\r\n                name=\"website\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                placeholder=\"Dallas\"\r\n                name=\"location\"\r\n                autoComplete=\"lname\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid container xs={6}>\r\n          <div className={classes.paper}>\r\n            <Typography variant=\"subtitle1\">General</Typography>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"persona\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"persona\"\r\n                label=\"Persona\"\r\n                placeholder=\"Software Developer\"\r\n                autoFocus\r\n                size=\"small\"\r\n              />\r\n              {/* {errors.firstName && (\r\n              <Typography color=\"error\" variant=\"body2\">\r\n                {errors.firstName.message}\r\n              </Typography>\r\n            )} */}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"industry\"\r\n                label=\"Industry\"\r\n                placeholder=\"Computer Software\"\r\n                name=\"industry\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"market\"\r\n                label=\"Market\"\r\n                placeholder=\"corporate gifting tool\"\r\n                name=\"market\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"locationB\"\r\n                label=\"Location\"\r\n                placeholder=\"Dallas\"\r\n                name=\"locationB\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"interest\"\r\n                label=\"Interest\"\r\n                placeholder=\"Hockey\"\r\n                name=\"interest\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disableElevation\r\n          >\r\n            Find Triggers\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import './App.css';\nimport Header from 'modules/components/Header/header'\nimport SearchForm from 'modules/pages/SearchForm/searchForm'\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header />\n    <SearchForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}