{"version":3,"sources":["modules/components/Header/header.tsx","modules/components/NewsResults/newsResults.tsx","modules/components/SearchForm/searchForm.tsx","modules/components/ResultCard/resultCard.tsx","modules/components/CompanyResultCard/companyResultCard.tsx","modules/pages/Home/home.tsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appbar","padding","breakpoints","down","logoContainer","backgroundColor","logo","height","button","actionButton","marginLeft","marginRight","spacing","palette","primary","light","loginButton","Header","classes","AppBar","color","elevation","position","className","Toolbar","disableGutters","Button","disableRipple","alt","src","root","minWidth","width","margin","overflow","borderRadius","title","pos","marginBottom","media","NewResults","text","weather","weatherIcon","Card","CardContent","Typography","variant","component","CardMedia","image","conditions","iconUrl","summary","CardActions","href","link","style","textDecoration","size","uglyOrange","paper","display","flexDirection","justifyContent","submit","background","border","textInput","SearchForm","getNews","getIndustry","getCompany","getPersona","getWeather","setIsResultView","useForm","register","handleSubmit","errors","useState","onSubmit","data","a","interest","industry","locationB","company","persona","align","Grid","container","xs","item","TextField","name","fullWidth","id","label","placeholder","autoFocus","disabled","inputRef","required","type","disableElevation","ResultCard","textToUse","CompanyResultCard","rows","companies","forEach","push","website","year_founded","country","region","locality","linkedin_url","undefined","length","topRow","Home","newsResults","setNewsResults","industryResults","setIndustryResults","companyResults","setCompanyResults","PersonaResults","setPersonaResults","weatherResults","setWeatherResults","isResultView","keyword","location","fetch","then","res","json","result","items","error","console","log","Container","maxWidth","onClick","Link","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.ec6c91d2.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: any) => ({\n  appbar: {\n    padding: \"0 5em\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"0\",\n    },\n  },\n  logoContainer: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  logo: {\n    height: \"4em\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"3em\",\n    },\n  },\n  button: {\n    ...theme.actionButton,\n    marginLeft: \"auto\",\n    marginRight: theme.spacing(2),\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.light,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"0\",\n    },\n  },\n  loginButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n\n\n  return (\n    <AppBar\n      color=\"transparent\"\n      elevation={0}\n      position=\"static\"\n      className={classes.appbar}\n    >\n      <Toolbar disableGutters>\n        <Button disableRipple className={classes.logoContainer}>\n          <img\n            alt=\"salesfox logo\"\n            className={classes.logo}\n            src=\"https://assets.salesfox.ai/salesfox%20logo%20final.png\"\n          />\n        </Button>\n        { /*\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n          className={classes.button}\n        >\n          Sign Up!\n        </Button>\n        <Button className={classes.loginButton}>Log In</Button>\n        */}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 325,\n    width: \"100%\",\n    margin: 30,\n    height: 350,\n    overflow: \"auto\",\n    borderRadius: 25,\n  },\n  title: {\n    color: \"#3f51b5\",\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  media: {\n    height: 150,\n  },\n});\n\nexport default function NewResults({ title, text, weather, weatherIcon }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n          {title}\n        </Typography>\n        {weather[4] ? (\n          <CardMedia\n            className={classes.media}\n            image={weather[4].conditions[0].iconUrl}\n            title={weather[4].conditions[0].summary}\n          />\n        ) : (\n          <Typography className={classes.pos} color=\"textSecondary\">\n            No Data\n          </Typography>\n        )}\n        <Typography className={classes.pos} color=\"textSecondary\">\n          Top Results:\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {text[0] ? text[0].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={text[0] && text[0].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n        <br></br>\n        <Typography variant=\"body2\" component=\"p\">\n          {text[1] ? text[1].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={text[1] && text[1].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n        <br></br>\n        <Typography variant=\"body2\" component=\"p\">\n          {text[2] ? text[2].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={text[2] && text[2].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, {useState } from \"react\";\nimport {\n  Button,\n  TextField,\n  Grid,\n  Container,\n  Typography,\n  Link,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from \"react-hook-form\";\n\nconst uglyOrange = '#e14536'\nconst creamSnow = '#FAF8F8'\nconst darkSlateGray = '#3f3d56'\n\nconst useStyles = makeStyles((theme: any) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: '100%',\n    justifyContent: 'space-between'\n  },\n  submit: {\n    width: '100%',\n    background: uglyOrange,\n    border: `1px solid ${darkSlateGray}`,\n    color: creamSnow,\n    \"&:hover\": {\n      background: uglyOrange,\n      \"@media (hover: none)\": {\n        backgroundColor: uglyOrange,\n      },\n    },\n  },\n  title: {\n    color : uglyOrange,\n  },\n  textInput: {\n    marginBottom : 10\n  }\n}));\n\nexport default function SearchForm({getNews, getIndustry, getCompany, getPersona, getWeather, setIsResultView}) {\n\n  // TODO: add validation and ensure secure login\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const onSubmit = async (data) => {\n    await getNews(data.interest || data.industry || \"news\", data.locationB || \"75024\");\n    await getIndustry(data.industry || \"Computer Software\", data.locationB || \"75024\");\n    await getCompany(data.company || \"Google\");\n    await getPersona(data.persona || \"Software Developer\", data.locationB || \"75024\");\n    await getWeather(data.locationB || \"75024\");\n    setIsResultView(true);\n  }\n\n  return (\n    <>\n      <Typography variant=\"h1\" align=\"center\" className={classes.title}>\n        Salesfox Search\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\" align=\"center\">\n        Note: Results can take up to 15 seconds to retrieve.\n      </Typography>\n      <Grid\n        component=\"form\"\n        spacing={1}\n        container\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <Grid container xs={5}>\n          <div className={classes.paper}>\n            <Typography variant=\"subtitle1\">Account Based</Typography>\n            <Grid item xs={12}>\n              <TextField\n                name=\"name\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"name\"\n                label=\"Name (Coming Soon)\"\n                placeholder=\"John doe\"\n                autoFocus\n                size=\"small\"\n                disabled\n                inputRef={register}\n                className={classes.textInput}\n              />\n              {/* {errors.firstName && (\n              <Typography color=\"error\" variant=\"body2\">\n                {errors.firstName.message}\n              </Typography>\n            )} */}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"title\"\n                label=\"Title (Coming Soon)\"\n                placeholder=\"CEO\"\n                name=\"title\"\n                size=\"small\"\n                disabled\n                inputRef={register}\n                className={classes.textInput}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"url\"\n                label=\"LinkedIn (Coming Soon)\"\n                placeholder=\"www.linkedin.com/in\"\n                name=\"url\"\n                size=\"small\"\n                disabled\n                inputRef={register}\n                className={classes.textInput}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"company\"\n                label=\"Company\"\n                placeholder=\"Google\"\n                name=\"company\"\n                size=\"small\"\n                inputRef={register}\n                className={classes.textInput}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"website\"\n                label=\"Website (Coming Soon)\"\n                placeholder=\"www.google.com\"\n                name=\"website\"\n                size=\"small\"\n                disabled\n                inputRef={register}\n                className={classes.textInput}\n              />\n            </Grid>\n          </div>\n        </Grid>\n        <Grid container xs={5}>\n          <div className={classes.paper}>\n            <Typography variant=\"subtitle1\">General</Typography>\n            <Grid item xs={12}>\n              <TextField\n                name=\"persona\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"persona\"\n                label=\"Persona\"\n                placeholder=\"Software Developer\"\n                autoFocus\n                size=\"small\"\n                inputRef={register}\n                className={classes.textInput}\n              />\n              {/* {errors.firstName && (\n              <Typography color=\"error\" variant=\"body2\">\n                {errors.firstName.message}\n              </Typography>\n            )} */}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"industry\"\n                label=\"Industry\"\n                placeholder=\"Computer Software\"\n                name=\"industry\"\n                size=\"small\"\n                inputRef={register}\n                className={classes.textInput}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"market\"\n                label=\"Market (Coming Soon)\"\n                placeholder=\"Corporate gifting tool\"\n                name=\"market\"\n                size=\"small\"\n                disabled\n                inputRef={register}\n                className={classes.textInput}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"locationB\"\n                label=\"Zip Code*\"\n                placeholder=\"75244\"\n                name=\"locationB\"\n                size=\"small\"\n                inputRef={register({ required: true })}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"interest\"\n                label=\"Interest\"\n                placeholder=\"Hockey\"\n                name=\"interest\"\n                size=\"small\"\n                inputRef={register}\n                className={classes.textInput}\n              />\n            </Grid>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            fullWidth\n            disableElevation\n          >\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 325,\n    width: \"100%\",\n    margin: 20,\n    height: 350,\n    overflow: \"auto\",\n    borderRadius: 25,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  title: {\n    color: \"#3f51b5\",\n  },\n});\n\nexport default function ResultCard({title, text}) {\n  const classes = useStyles();\n\n  const textToUse = text || {};\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n          {title}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          Top Results:\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {textToUse[0] ? textToUse[0].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={textToUse[0] && textToUse[0].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n        <br></br>\n        <Typography variant=\"body2\" component=\"p\">\n          {textToUse[1] ? textToUse[1].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={textToUse[1] && textToUse[1].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n        <br></br>\n        <Typography variant=\"body2\" component=\"p\">\n          {textToUse[2] ? textToUse[2].title : \"Unable to Retrieve Data\"}\n        </Typography>\n        <CardActions>\n          <a href={textToUse[2] && textToUse[2].link} style={{ textDecoration: \"none\" }}>\n            <Button size=\"small\">Learn More</Button>\n          </a>\n        </CardActions>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 325,\n    width: \"100%\",\n    margin: 20,\n    height: 350,\n    overflow: \"auto\",\n    borderRadius: 25,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  title: {\n    color: \"#3f51b5\",\n  },\n});\n\nexport default function CompanyResultCard({title, data}) {\n  const classes = useStyles();\n\n  var rows:JSX.Element[] = [];\n  if (data && data.companies) {\n    data.companies.forEach(function (company) {\n      rows.push(\n        <div>\n          <hr/>\n          <Typography variant=\"body2\" component=\"p\">\n            Name: {company.name ? company.name : \"Unknown\"}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Industry: {company.industry ? company.industry : \"Unknown\"}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Size: {company.size ? company.size : \"Unknown\"}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Website: {company.website ? company.website : \"Unknown\"}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Year Founded: {company.year_founded ? company.year_founded : \"Unknown\"}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Country: {company.country ? company.country : \"Unknown\"}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Region: {company.region ? company.region : \"Unknown\"}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Locality: {company.locality ? company.locality : \"Unknown\"}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            LinkedIn: {company.linkedin_url ? company.linkedin_url : \"Unknown\"}\n          </Typography>\n        </div>\n      );\n    });\n  }\n\n  if (rows === undefined || rows.length == 0) {\n    rows.push(\n      <div>\n        <Typography variant=\"body2\" component=\"p\">\n          No results found.\n        </Typography>\n      </div>\n    );\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n          {title}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          Top Results:\n        </Typography>\n\n        {rows}\n\n      </CardContent>\n    </Card>\n  );\n}\n","import React, {useState} from \"react\";\nimport {\n  Grid,\n  Container,\n  Button,\n  Typography,\n  Link\n} from \"@material-ui/core\";\n\nimport NewsResults from 'modules/components/NewsResults/newsResults'\nimport SearchForm from 'modules/components/SearchForm/searchForm'\nimport ResultCard from \"modules/components/ResultCard/resultCard\"\nimport CompanyResultCard from 'modules/components/CompanyResultCard/companyResultCard'\n// import {getNews} from 'modules/api/api'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst uglyOrange = \"#e14536\";\nconst creamSnow = \"#FAF8F8\";\nconst darkSlateGray = \"#3f3d56\";\n\nconst useStyles = makeStyles((theme: any) => ({\n  submit: {\n    width: '100%',\n    background: uglyOrange,\n    border: `1px solid ${darkSlateGray}`,\n    color: creamSnow,\n    \"&:hover\": {\n      background: uglyOrange,\n      \"@media (hover: none)\": {\n        backgroundColor: uglyOrange,\n      },\n    },\n  },\n  topRow: {\n    display: 'flex',\n    justifyContent : 'space-between'\n  }\n}));\n\n\nexport default function Home() {\n  const classes = useStyles();\n  const [newsResults, setNewsResults] = useState([])\n  const [industryResults, setIndustryResults] = useState([])\n  const [companyResults, setCompanyResults] = useState([]);\n  const [PersonaResults, setPersonaResults] = useState([]);\n  const [weatherResults, setWeatherResults] = useState([]);\n  const [isResultView, setIsResultView] = useState(false)\n\n\n      async function getNews(keyword, location) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/news?q=${keyword}&zip_code=${location}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setNewsResults(result.items);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      async function getIndustry(keyword, location) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/industry?q=${keyword}&zip_code=${location}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setIndustryResults(result.items);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      async function getCompany(keyword) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/companies?name=${keyword}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setCompanyResults(result);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      async function getPersona(keyword, location) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/persona?q=${keyword}&zip_code=${location}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setPersonaResults(result.items);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      async function getWeather(location) {\n        await fetch(\n          `https://search-beta.salesfox.ai/api/weather?zip_code=${location}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              setWeatherResults(result.weather);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n\n      }\n\n      const getResults = async (keyword, location, name) => {\n         await getNews(keyword, location);\n         await getIndustry(keyword, location);\n         await getCompany(name);\n         await getPersona(keyword, location);\n         await getWeather(location);\n         setIsResultView(true);\n      }\n\n  return (\n    <Container maxWidth=\"lg\">\n      {isResultView ? (\n        <div>\n          <div className={classes.topRow}>\n            <Grid xs={3}>\n              <ResultCard title=\"Prospect Results\" text=\"COMING SOON\" />\n            </Grid>\n            <Grid xs={3}>\n                <CompanyResultCard title=\"Company Results\" data={companyResults} />\n            </Grid>\n            <Grid xs={3}>\n                <NewsResults\n                  title=\"Location Results\"\n                  text={newsResults}\n                  weather={weatherResults}\n                  weatherIcon={weatherResults}\n                />\n            </Grid>\n          </div>\n          <div className={classes.topRow}>\n            <Grid xs={3}>\n                <ResultCard title=\"Persona Results\" text={PersonaResults} />\n            </Grid>\n            <Grid xs={3}>\n              <ResultCard title=\"Interest Results\" text=\"COMING SOON\" />\n            </Grid>\n            <Grid xs={3}>\n                <ResultCard title=\"Market Results\" text={industryResults} />\n            </Grid>\n          </div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disableElevation\n            onClick={() => setIsResultView(false)}\n          >\n            Search Again\n          </Button>\n        </div>\n      ) : (\n        <>\n          <SearchForm\n            getNews={getNews}\n            getIndustry={getIndustry}\n            getCompany={getCompany}\n            getPersona={getPersona}\n            getWeather={getWeather}\n            setIsResultView={setIsResultView}\n          />\n          {/* <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disableElevation\n            onClick={() => getResults(\"technology\", \"75024\", \"google\")}\n          >\n            Find Triggers\n          </Button> */}\n        </>\n      )}\n      <br/>\n      <Typography variant=\"body2\" component=\"p\" align=\"center\">\n        <Link\n          color=\"inherit\"\n          target=\"_blank\"\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLSf-0rkzp6h2vFz0hTKMT9jVnWNjZmoBGpPSsq-uauxb8SJI8A/viewform\"\n        >\n        Click Here To Provide Feedback\n        </Link>\n      </Typography>\n      <br/>\n      <br/>\n    </Container>\n  );\n}\n","import './App.css';\nimport Header from 'modules/components/Header/header'\nimport Home from 'modules/pages/Home/home'\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header />\n    <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}