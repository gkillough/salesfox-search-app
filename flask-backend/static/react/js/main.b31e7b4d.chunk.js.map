{"version":3,"sources":["modules/components/Header/header.tsx","modules/components/NewsResults/newsResults.tsx","modules/components/SearchForm/searchForm.tsx","modules/components/ResultCard/resultCard.tsx","modules/components/CompanyResultCard/companyResultCard.tsx","modules/components/ComingSoon/ComingSoon.tsx","modules/pages/Home/home.tsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appbar","padding","breakpoints","down","logoContainer","backgroundColor","logo","height","button","actionButton","marginLeft","marginRight","spacing","palette","primary","light","loginButton","Header","classes","AppBar","color","elevation","position","className","Toolbar","disableGutters","Button","disableRipple","alt","src","root","minWidth","width","margin","overflow","borderRadius","title","pos","marginBottom","media","NewResults","text","weather","weatherIcon","Card","CardContent","Typography","variant","component","conditions","summary","CardActions","href","link","style","textDecoration","size","uglyOrange","paper","display","flexDirection","justifyContent","submit","background","border","textInput","SearchForm","getNews","getIndustry","getCompany","getPersona","getWeather","setIsResultView","setIsDataLoading","useForm","register","handleSubmit","errors","useState","onSubmit","data","a","interest","industry","locationB","company","persona","ReactGA","event","category","action","align","Grid","container","xs","item","TextField","name","fullWidth","id","label","placeholder","autoFocus","disabled","inputRef","required","type","disableElevation","ResultCard","textToUse","CompanyResultCard","rows","companies","forEach","push","website","year_founded","country","region","locality","linkedin_url","undefined","length","ComingSoon","topRow","Home","newsResults","setNewsResults","industryResults","setIndustryResults","companyResults","setCompanyResults","PersonaResults","setPersonaResults","weatherResults","setWeatherResults","isResultView","isDataLoading","keyword","location","fetch","then","res","json","result","items","error","console","log","pageview","Container","maxWidth","CircularProgress","onClick","Link","target","App","initialize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.b31e7b4d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  appbar: {\r\n    padding: \"0 5em\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"0\",\r\n    },\r\n  },\r\n  logoContainer: {\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  logo: {\r\n    height: \"4em\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: \"3em\",\r\n    },\r\n  },\r\n  button: {\r\n    ...theme.actionButton,\r\n    marginLeft: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"0\",\r\n    },\r\n  },\r\n  loginButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <AppBar\r\n      color=\"transparent\"\r\n      elevation={0}\r\n      position=\"static\"\r\n      className={classes.appbar}\r\n    >\r\n      <Toolbar disableGutters>\r\n        <Button disableRipple className={classes.logoContainer}>\r\n          <img\r\n            alt=\"salesfox logo\"\r\n            className={classes.logo}\r\n            src=\"https://assets.salesfox.ai/salesfox%20logo%20final.png\"\r\n          />\r\n        </Button>\r\n        { /*\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          className={classes.button}\r\n        >\r\n          Sign Up!\r\n        </Button>\r\n        <Button className={classes.loginButton}>Log In</Button>\r\n        */}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 325,\r\n    width: \"100%\",\r\n    margin: 30,\r\n    height: 350,\r\n    overflow: \"auto\",\r\n    borderRadius: 25,\r\n  },\r\n  title: {\r\n    color: \"#3f51b5\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  media: {\r\n    height: 150,\r\n  }\r\n});\r\n\r\nexport default function NewResults({ title, text, weather, weatherIcon }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n        {weather[4] ? (\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {weather[4].conditions[0].summary}\r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            No Data\r\n          </Typography>\r\n        )}\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Top Results:\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {text[0] ? text[0].title : \"No Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a href={text[0] && text[0].link} style={{ textDecoration: \"none\" }}>\r\n            <Button size=\"small\" variant=\"outlined\">\r\n              Learn More\r\n            </Button>\r\n          </a>\r\n        </CardActions>\r\n        <br></br>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {text[1] ? text[1].title : \"No Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a href={text[1] && text[1].link} style={{ textDecoration: \"none\" }}>\r\n            <Button size=\"small\" variant='outlined'>\r\n              Learn More\r\n            </Button>\r\n          </a>\r\n        </CardActions>\r\n        <br></br>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {text[2] ? text[2].title : \"No Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a href={text[2] && text[2].link} style={{ textDecoration: \"none\" }}>\r\n            <Button size=\"small\" variant='outlined'>\r\n              Learn More\r\n            </Button>\r\n          </a>\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, {useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Typography,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ReactGA from 'react-ga';\r\n\r\nconst uglyOrange = '#e14536'\r\nconst creamSnow = '#FAF8F8'\r\nconst darkSlateGray = '#3f3d56'\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: '100%',\r\n    justifyContent: 'space-between'\r\n  },\r\n  submit: {\r\n    width: '100%',\r\n    background: uglyOrange,\r\n    border: `1px solid ${darkSlateGray}`,\r\n    color: creamSnow,\r\n    \"&:hover\": {\r\n      background: uglyOrange,\r\n      \"@media (hover: none)\": {\r\n        backgroundColor: uglyOrange,\r\n      },\r\n    },\r\n  },\r\n  title: {\r\n    color : uglyOrange,\r\n  },\r\n  textInput: {\r\n    marginBottom : 10\r\n  }\r\n}));\r\n\r\nexport default function SearchForm({\r\n  getNews,\r\n  getIndustry,\r\n  getCompany,\r\n  getPersona,\r\n  getWeather,\r\n  setIsResultView,\r\n  setIsDataLoading,\r\n}) {\r\n  // TODO: add validation and ensure secure login\r\n  const classes = useStyles();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n  const onSubmit = async (data) => {\r\n    setIsDataLoading(true)\r\n    await getNews(data.interest || data.industry, data.locationB);\r\n    await getIndustry(data.industry, data.locationB);\r\n    await getCompany(data.company);\r\n    await getPersona(data.persona, data.locationB);\r\n    await getWeather(data.locationB);\r\n    setIsResultView(true);\r\n    setIsDataLoading(false);\r\n\r\n    ReactGA.event({\r\n      category: \"Search\",\r\n      action: \"A search was performed\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h1\" align=\"center\" className={classes.title}>\r\n        Salesfox Search\r\n      </Typography>\r\n      <Grid\r\n        component=\"form\"\r\n        spacing={1}\r\n        container\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <Grid container xs={6}>\r\n          <div className={classes.paper}>\r\n            <Typography variant=\"subtitle1\">Account Based</Typography>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name (Coming Soon)\"\r\n                placeholder=\"John doe\"\r\n                autoFocus\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n                className={classes.textInput}\r\n              />\r\n              {/* {errors.firstName && (\r\n              <Typography color=\"error\" variant=\"body2\">\r\n                {errors.firstName.message}\r\n              </Typography>\r\n            )} */}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"title\"\r\n                label=\"Title (Coming Soon)\"\r\n                placeholder=\"CEO\"\r\n                name=\"title\"\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n                className={classes.textInput}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"url\"\r\n                label=\"LinkedIn (Coming Soon)\"\r\n                placeholder=\"www.linkedin.com/in\"\r\n                name=\"url\"\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n                className={classes.textInput}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"company\"\r\n                label=\"Customer Company\"\r\n                placeholder=\"eg. Google\"\r\n                name=\"company\"\r\n                size=\"small\"\r\n                inputRef={register}\r\n                className={classes.textInput}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"website\"\r\n                label=\"Website (Coming Soon)\"\r\n                placeholder=\"www.google.com\"\r\n                name=\"website\"\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n                className={classes.textInput}\r\n              />\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid container xs={6}>\r\n          <div className={classes.paper}>\r\n            <Typography variant=\"subtitle1\">General</Typography>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"persona\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"persona\"\r\n                label=\"Persona\"\r\n                placeholder=\"eg Software Developer\"\r\n                autoFocus\r\n                size=\"small\"\r\n                inputRef={register}\r\n                className={classes.textInput}\r\n              />\r\n              {/* {errors.firstName && (\r\n              <Typography color=\"error\" variant=\"body2\">\r\n                {errors.firstName.message}\r\n              </Typography>\r\n            )} */}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"industry\"\r\n                label=\" Customer Industry\"\r\n                placeholder=\"eg Computer Software\"\r\n                name=\"industry\"\r\n                size=\"small\"\r\n                inputRef={register}\r\n                className={classes.textInput}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"market\"\r\n                label=\"Market (Coming Soon)\"\r\n                placeholder=\"Corporate gifting tool\"\r\n                name=\"market\"\r\n                size=\"small\"\r\n                disabled\r\n                inputRef={register}\r\n                className={classes.textInput}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"locationB\"\r\n                label=\"Customer Zip Code*\"\r\n                placeholder=\"eg 75244\"\r\n                name=\"locationB\"\r\n                size=\"small\"\r\n                inputRef={register({ required: true })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"interest\"\r\n                label=\"Customer Interest\"\r\n                placeholder=\"eg Hockey\"\r\n                name=\"interest\"\r\n                size=\"small\"\r\n                inputRef={register}\r\n                className={classes.textInput}\r\n              />\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            fullWidth\r\n            disableElevation\r\n          >\r\n            Search\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 325,\r\n    width: \"100%\",\r\n    margin: 20,\r\n    height: 350,\r\n    overflow: \"auto\",\r\n    borderRadius: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  title: {\r\n    color: \"#3f51b5\",\r\n  }\r\n});\r\n\r\nexport default function ResultCard({title, text}) {\r\n  const classes = useStyles();\r\n\r\n  const textToUse = text || {};\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Top Results:\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {textToUse[0] ? textToUse[0].title : \"No Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a\r\n            href={textToUse[0] && textToUse[0].link}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Button size=\"small\" variant=\"outlined\">\r\n              Learn More\r\n            </Button>\r\n          </a>\r\n        </CardActions>\r\n        <br></br>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {textToUse[1] ? textToUse[1].title : \"No Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a\r\n            href={textToUse[1] && textToUse[1].link}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Button size=\"small\" variant=\"outlined\">\r\n              Learn More\r\n            </Button>\r\n          </a>\r\n        </CardActions>\r\n        <br></br>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {textToUse[2] ? textToUse[2].title : \"No Data\"}\r\n        </Typography>\r\n        <CardActions>\r\n          <a\r\n            href={textToUse[2] && textToUse[2].link}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Button size=\"small\" variant=\"outlined\">\r\n              Learn More\r\n            </Button>\r\n          </a>\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 325,\r\n    width: \"100%\",\r\n    margin: 20,\r\n    height: 350,\r\n    overflow: \"auto\",\r\n    borderRadius: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  title: {\r\n    color: \"#3f51b5\",\r\n  },\r\n});\r\n\r\nexport default function CompanyResultCard({title, data}) {\r\n  const classes = useStyles();\r\n\r\n  var rows:JSX.Element[] = [];\r\n  if (data && data.companies) {\r\n    data.companies.forEach(function (company) {\r\n      rows.push(\r\n        <div>\r\n          <hr/>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Name: {company.name ? company.name : \"Unknown\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Industry: {company.industry ? company.industry : \"Unknown\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Size: {company.size ? company.size : \"Unknown\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Website: {company.website ? company.website : \"Unknown\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Year Founded: {company.year_founded ? company.year_founded : \"Unknown\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Country: {company.country ? company.country : \"Unknown\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Region: {company.region ? company.region : \"Unknown\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            Locality: {company.locality ? company.locality : \"Unknown\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            LinkedIn: {company.linkedin_url ? company.linkedin_url : \"Unknown\"}\r\n          </Typography>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  if (rows === undefined || rows.length == 0) {\r\n    rows.push(\r\n      <div>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          No results found.\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Top Results:\r\n        </Typography>\r\n\r\n        {rows}\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 325,\r\n    width: \"100%\",\r\n    margin: 20,\r\n    height: 350,\r\n    overflow: \"auto\",\r\n    borderRadius: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  title: {\r\n    color: \"#3f51b5\",\r\n  },\r\n});\r\n\r\nexport default function ComingSoon({ title}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          COMING SOON\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Button,\r\n  Typography,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport NewsResults from 'modules/components/NewsResults/newsResults'\r\nimport SearchForm from 'modules/components/SearchForm/searchForm'\r\nimport ResultCard from \"modules/components/ResultCard/resultCard\"\r\nimport CompanyResultCard from 'modules/components/CompanyResultCard/companyResultCard'\r\nimport ComingSoon from 'modules/components/ComingSoon/ComingSoon'\r\n// import {getNews} from 'modules/api/api'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ReactGA from 'react-ga';\r\n\r\nconst uglyOrange = \"#e14536\";\r\nconst creamSnow = \"#FAF8F8\";\r\nconst darkSlateGray = \"#3f3d56\";\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n  submit: {\r\n    width: '100%',\r\n    background: uglyOrange,\r\n    border: `1px solid ${darkSlateGray}`,\r\n    color: creamSnow,\r\n    \"&:hover\": {\r\n      background: uglyOrange,\r\n      \"@media (hover: none)\": {\r\n        backgroundColor: uglyOrange,\r\n      },\r\n    },\r\n  },\r\n  topRow: {\r\n    display: 'flex',\r\n    justifyContent : 'space-between'\r\n  }\r\n}));\r\n\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const [newsResults, setNewsResults] = useState([]);\r\n  const [industryResults, setIndustryResults] = useState([]);\r\n  const [companyResults, setCompanyResults] = useState([]);\r\n  const [PersonaResults, setPersonaResults] = useState([]);\r\n  const [weatherResults, setWeatherResults] = useState([]);\r\n  const [isResultView, setIsResultView] = useState(false);\r\n  const [isDataLoading, setIsDataLoading] = useState(false);\r\n\r\n  ReactGA.pageview('/');\r\n\r\n\r\n      async function getNews(keyword, location) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/news?q=${keyword}&zip_code=${location}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setNewsResults(result.items);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      async function getIndustry(keyword, location) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/industry?q=${keyword}&zip_code=${location}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setIndustryResults(result.items);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      async function getCompany(keyword) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/companies?name=${keyword}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setCompanyResults(result);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      async function getPersona(keyword, location) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/persona?q=${keyword}&zip_code=${location}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setPersonaResults(result.items);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      async function getWeather(location) {\r\n        await fetch(\r\n          `https://search-beta.salesfox.ai/api/weather?zip_code=${location}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              setWeatherResults(result.weather);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n\r\n      }\r\n\r\n      const getResults = async (keyword, location, name) => {\r\n         await getNews(keyword, location);\r\n         await getIndustry(keyword, location);\r\n         await getCompany(name);\r\n         await getPersona(keyword, location);\r\n         await getWeather(location);\r\n         setIsResultView(true);\r\n      }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <>\r\n        {isDataLoading && <CircularProgress />}\r\n        {isResultView ? (\r\n          <div>\r\n            <div className={classes.topRow}>\r\n              <Grid xs={3}>\r\n                <ComingSoon title=\"Prospect Results\"/>\r\n              </Grid>\r\n              <Grid xs={3}>\r\n                <CompanyResultCard\r\n                  title=\"Company Results\"\r\n                  data={companyResults}\r\n                />\r\n              </Grid>\r\n              <Grid xs={3}>\r\n                <NewsResults\r\n                  title=\"Location Results\"\r\n                  text={newsResults}\r\n                  weather={weatherResults}\r\n                  weatherIcon={weatherResults}\r\n                />\r\n              </Grid>\r\n            </div>\r\n            <div className={classes.topRow}>\r\n              <Grid xs={3}>\r\n                <ResultCard title=\"Persona Results\" text={PersonaResults} />\r\n              </Grid>\r\n              <Grid xs={3}>\r\n                <ComingSoon title=\"Interest Results\" />\r\n              </Grid>\r\n              <Grid xs={3}>\r\n                <ResultCard title=\"Market Results\" text={industryResults} />\r\n              </Grid>\r\n            </div>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disableElevation\r\n              onClick={() => setIsResultView(false)}\r\n            >\r\n              Search Again\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <SearchForm\r\n              getNews={getNews}\r\n              getIndustry={getIndustry}\r\n              getCompany={getCompany}\r\n              getPersona={getPersona}\r\n              getWeather={getWeather}\r\n              setIsResultView={setIsResultView}\r\n              setIsDataLoading={setIsDataLoading}\r\n            />\r\n            {/* <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disableElevation\r\n            onClick={() => getResults(\"technology\", \"75024\", \"google\")}\r\n          >\r\n            Find Triggers\r\n          </Button> */}\r\n          </>\r\n        )}\r\n        <br />\r\n        <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n          <Link\r\n            color=\"inherit\"\r\n            target=\"_blank\"\r\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLSf-0rkzp6h2vFz0hTKMT9jVnWNjZmoBGpPSsq-uauxb8SJI8A/viewform\"\r\n          >\r\n            Click Here To Provide Feedback\r\n          </Link>\r\n        </Typography>\r\n        <br />\r\n        <br />\r\n      </>\r\n    </Container>\r\n  );\r\n}\r\n","import './App.css';\r\nimport Header from 'modules/components/Header/header';\r\nimport Home from 'modules/pages/Home/home';\r\nimport ReactGA from 'react-ga';\r\n\r\nfunction App() {\r\n  ReactGA.initialize('UA-194080179-1');\r\n  return (\r\n    <div className=\"App\">\r\n    <Header />\r\n    <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}